module Main where

import Types

data Unit is Unit end


not :: Bit -> Bit
is
  \x -> case x of
        {
          Types.One  -> Types.Zero
          ;
          Types.Zero -> Types.One
        }
end

{-
notre :: Bit -> <ReT Bit Bit I><()>
is
  \x -> bind inp <- signal (not x)
        in notre inp
end


notter :: <ReT Bit Bit I><()>
is
  notre Zero
end


start :: <ReT Bit Bit I><()>
is
  notter
end
-}
